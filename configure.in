AC_INIT(src/main.c)

AC_CONFIG_HEADER(config.h)

AC_CONFIG_AUX_DIR(sub)

AC_PROG_CC
AC_PROG_INSTALL
AC_C_BIGENDIAN

if test $prefix = NONE
then
    myprefix=/usr/local
else
    myprefix=$prefix
fi

#################################################
# configure arguments
#################################################
DEBUGGING=0
LOGGING=0

AC_ARG_WITH(debug,              [  --with-debug              include debug info ], [ DEBUGGING=1; ], [])
AC_ARG_WITH(optimize,           [  --with-optimize           with optimize(-O in CFLAGS) ], [ ENABLE_OPTIMIZE=1 ], [ ENABLE_OPTIMIZE=0 ])

#################################################
# check cpu type
#################################################
AC_MSG_CHECKING(CPU type)

if test `uname -m` = x86_64
then
    echo x86_64

    AC_DEFINE(__X86_64_CPU__, 1)
    AC_DEFINE(__64BIT_CPU__, 1)
elif test `uname -m` = i386 || test `uname -m` = i686
then
    echo x86_32

    AC_DEFINE(__32BIT_CPU__, 1)
elif test `uname -p` = sparc
then
    echo sparc

    AC_DEFINE(__32BIT_CPU__, 1)
    AC_DEFINE(__BIG_ENDIAN__, 1)
elif test `uname -m` = sparc64
then
    echo sparc64

    AC_DEFINE(__64BIT_CPU__, 1)
    AC_DEFINE(__BIG_ENDIAN__, 1)
elif test `uname -m` = ppc
then
    echo ppc

    AC_DEFINE(__32BIT_CPU__, 1)
    AC_DEFINE(__BIG_ENDIAN__, 1)
elif test `uname -m` = ppc64
then
    echo ppc64

    AC_DEFINE(__64BIT_CPU__, 1)
    AC_DEFINE(__BIG_ENDIAN__, 1)
elif test `uname -m` = armv6l
then
    echo armv6l

    AC_DEFINE(__32BIT_CPU__, 1)
elif test `uname -m` = armv7l
then
    echo armv7l

    AC_DEFINE(__32BIT_CPU__, 1)
else
    echo other

    AC_DEFINE(__64BIT_CPU__, 1)
fi

##################################################
# check operating systems
##################################################
AC_MSG_CHECKING(Operating System)

CFLAGS='-DPREFIX="\"${DESTDIR}/\"" -fPIC'
#CFLAGS="-fPIC -rdynamic $CFLAGS"

AR_LIB=

if uname -v|grep iSH > /dev/null; then
    echo "iSH"

    OS=iSH

    AC_DEFINE(__ISH__, 1)

    if test $myprefix = /usr/local; then
        CFLAGS="-Isrc/ -I. $CFLAGS"
    else
        CFLAGS="-Isrc/ -I. -I$myprefix/include -L$myprefix/lib $CFLAGS"
    fi

    AC_HAVE_LIBRARY(util, [ LIBS="$LIBS -lutil" ], [])
elif test `uname -s` = "Darwin"; then
    echo "Darwin"

    OS=DARWIN

    AC_DEFINE(__DARWIN__, 1)

    if test $myprefix = /usr/local; then
        CFLAGS="-Isrc/ -I. -I `xcrun --show-sdk-path`/usr/include $CFLAGS"
    else 
        CFLAGS="-Isrc/ -I. -I$myprefix/include -L$myprefix/lib -I `xcrun --show-sdk-path`/usr/include $CFLAGS"
    fi
elif test `uname -s` = "FreeBSD"; then
    echo "FreeBSD"

    OS=FREEBSD

    AC_DEFINE(__FREEBSD__, 1)

    CFLAGS="-Isrc/ -I.  -I$myprefix/include -L$myprefix/lib $CFLAGS"
else
    echo "Linux"

    OS=LINUX

    AC_DEFINE(__LINUX__, 1)

    if test $myprefix = /usr/local; then
        CFLAGS="-Isrc/ -I. $CFLAGS"
    else
        CFLAGS="-Isrc/ -I. -I$myprefix/include -L$myprefix/lib $CFLAGS"
    fi

    AC_HAVE_LIBRARY(util, [ LIBS="$LIBS -lutil" ], [])
fi

###################################################
# CFLAGS settings
###################################################
if test -d /usr/local/include
then
    CFLAGS="$CFLAGS -I/usr/local/include"
fi

#if test -d /usr/local/lib
#then
#    CFLAGS="$CFLAGS -L /usr/local/lib"
#fi

if test -d /opt/local/include
then
    CFLAGS="$CFLAGS -I/opt/local/include"
fi

#if test -d /opt/local/lib
#then
#    CFLAGS="$CFLAGS -L /opt/local/lib"
#fi

if test -d /usr/include/i386-linux-gnu/
then
    CFLAGS="$CFLAGS -I /usr/include/i386-linux-gnu//"
fi

if test -d /usr/lib/i386-linux-gnu/
then
    CFLAGS="$CFLAGS -L /usr/lib/i386-linux-gnu/"
fi

if test $ENABLE_OPTIMIZE = 1
then
    CFLAGS="$CFLAGS -O3"
fi

if test $DEBUGGING = 1
then
    CFLAGS="$CFLAGS -g -DMDEBUG"
fi

AC_SUBST(OS)

export CFLAGS

##################################################
# Libs
##################################################
CC=gcc

INSTALL="$(which install) -c"

if test "$OS" != FREEBSD
then
    AC_HAVE_LIBRARY(dl, [ LIBS="$LIBS -ldl"; ], [])
fi

AC_CHECK_HEADER(math.h, [AC_DEFINE(HAVE_MATH_H,1)], [])
AC_HAVE_LIBRARY(m, [ LIBS="$LIBS -lm"; ], [])
AC_CHECK_HEADER(iconv.h, [AC_DEFINE(HAVE_ICONV_H, 1)], [])

if test "$OS" = CYGWIN || test "$OS" = DARWIN || test "$OS" = FREEBSD
then
    LIBS="$LIBS -liconv"
fi

AC_CHECK_HEADER(pcre.h, [AC_DEFINE(HAVE_PCRE_H,1)], [])
AC_HAVE_LIBRARY(pcre, [ LIBS="$LIBS -lpcre"; ], [ eixt ])
AC_HAVE_LIBRARY(y, [ LIBS="$LIBS -ly"; ], [ eixt ])
AC_HAVE_LIBRARY(fl, [ LIBS="$LIBS -lfl"; ], [ LIBS="$LIBS -lfl"; ])

AC_HAVE_LIBRARY(rt, [ LIBS="$LIBS -lrt"; ], [])

AC_SUBST(LIBS)

if which clang > /dev/null
then
    CC=clang
    if which ccache > /dev/null
    then
        CC="ccache clang"
    fi
else
    CC=gcc

    if which ccache > /dev/null
    then
        CC="ccache gcc"
    fi
fi

AC_SUBST(CC)

DESTDIR=$myprefix

AC_SUBST(DESTDIR)

CXXFLAGS='-DPREFIX="\"${DESTDIR}/\""'
CXXFLAGS="-I . -I src $CXXFLAGS"
#CXXFLAGS="-fPIC -rdynamic $CXXFLAGS"

if which clang++ > /dev/null
then
    CXX=g++

    if which ccache > /dev/null
    then
        CXX="ccache g++"
    fi
else
    echo "Require g++"
    exit 2
fi

if test $DEBUGGING = 1
then
    CXXFLAGS='`llvm-config --cxxflags --ldflags --system-libs --libs all`  -DMDEBUG -g'" $CXXFLAGS"
else
    CXXFLAGS='`llvm-config --cxxflags --ldflags --system-libs --libs all`  -O3'" $CXXFLAGS"
fi

LIBS="$LIBS"

AC_SUBST(CXX)

COMMON_OBJS="src/buffer.o src/xfunc.o src/alignment.o"

OBJS="src/klass.o src/node_type.o src/typedef.o src/vtable.o src/node.o"

RUNTIME_OBJS=""

AC_CHECK_FUNCS(lchmod)

#CXXFLAGS="$CXXFLAGS -Qunused-arguments"

AC_SUBST(CXXFLAGS)
AC_SUBST(CFLAGS)

AC_CHECK_FUNCS(execvpe)

AC_SUBST(OBJS)
AC_SUBST(COMMON_OBJS)
AC_SUBST(RUNTIME_OBJS)

AC_OUTPUT(Makefile)
